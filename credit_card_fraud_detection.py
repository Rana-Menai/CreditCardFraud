# -*- coding: utf-8 -*-
"""Credit Card Fraud Detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/github/sagnikghoshcr7/Credit-Card-Fraud-Detection/blob/master/Credit%20Card%20Fraud%20Detection.ipynb

# Credit Card Fraud Detection - Sagnik Ghosh

## Data frames
"""

import pandas as pd

import numpy as np

df = pd.read_csv('creditcard.csv' , nrows=10000)

df

df.info()

df['Class'].value_counts()

"""### Data Pre-processing"""

from sklearn.model_selection import train_test_split

from sklearn.preprocessing import StandardScaler

scalar = StandardScaler()

X = df.drop('Class', axis=1)
y = df.Class

X = scalar.fit_transform(X)

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=1)

"""## Modeling"""

from sklearn.svm import SVC

model_svc = SVC()

model_svc.fit(X_train, y_train)

model_svc.score(X_train,y_train)

model_svc.score(X_test,y_test)

y_predict = model_svc.predict(X_test)

"""## Implementing Report"""

from sklearn.metrics import classification_report , confusion_matrix

import numpy as np

cm = np.array(confusion_matrix(y_test, y_predict, labels=[1,0]))
confusion = pd.DataFrame(cm, index=['is Fraud', 'is Normal'],columns=['predicted fraud','predicted normal'])
confusion

import seaborn as sns

sns.heatmap(confusion, annot=True)

print(classification_report(y_test, y_predict))